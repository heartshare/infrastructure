groups:
  # prometheus
  - name: Prometheus
    rules:
      - alert: PrometheusTargetDown
        expr: up == 0
        for: 0m
        annotations:
          title: Prometheus target `{{ '{{ $labels.job }}' }}` down
          description: Target `{{ '{{ $labels.job }}' }}` @ `{{ '{{ $labels.instance }}' }}` is down.
        labels:
          severity: critical
      - alert: ConfigurationReloadFailure
        expr: prometheus_config_last_reload_successful != 1
        for: 0m
        annotations:
          title: Prometheus configuration reload failure
          description: Configuration reload failed
        labels:
          severity: warning

  # node
  - name: Node Exporter
    rules:
      - alert: HostHighCpuLoad
        expr: 100 - (avg by(instance) (rate(node_cpu_seconds_total{mode="idle"}[2m])) * 100) > 80
        for: 0m
        annotations:
          title: Host high CPU load (instance {{ '{{ $labels.instance }}' }})
          description: CPU load is > 80%
        labels:
          severity: warning
      - alert: HostOutOfMemory
        expr: node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes * 100 < 10
        for: 2m
        annotations:
          title: Host out of memory (instance {{ '{{ $labels.instance }}' }})
          description: Node memory is filling up (< 10% left)
        labels:
          severity: warning
      - alert: HostOutOfDiskSpace
        expr: (node_filesystem_avail_bytes * 100) / node_filesystem_size_bytes < 10 and ON (instance, device, mountpoint) node_filesystem_readonly == 0
        for: 2m
        annotations:
          title: Host out of disk space (instance {{ '{{ $labels.instance }}' }})
          description: Disk is almost full (< 10% left)
        labels:
          severity: warning
      - alert: HostNodeOvertemperatureAlarm
        expr: node_hwmon_temp_crit_alarm_celsius == 1
        for: 0m
        annotations:
          title: Host node overtemperature alarm (instance {{ '{{ $labels.instance }}' }})
          description: Physical node temperature alarm triggered
        labels:
          severity: critical

  # cadvisor
  - name: Cadvisor
    rules:
      - alert: ContainerKilled
        expr: time() - container_last_seen > 60
        for: 0m
        annotations:
          title: Container killed (instance {{ '{{ $labels.instance }}' }})
          description: A container has disappeared
        labels:
          severity: warning
